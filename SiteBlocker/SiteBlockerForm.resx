<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAAAAACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAIAAAADAAAAAwAAAAIAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAgAAAANAAAAEQAA
        ABVra2tigICA/4CAgP+AgID7gICA8QAAABoAAAAXAAAAEwAAAA8AAAALAAAABgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgAAAA0AAAATAAAAGQAA
        AB8AAAAlAAAAKnFxcaKzs7P+4eHh/9zc3P+Dg4P8KioqQwAAAC0AAAAoAAAAIgAAABwAAAAWAAAAEAAA
        AAoAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAkAAAAQAAAAFgAA
        AB0AAAAkAAAAKwAAADEAAAA4fHx80sLCwv/CwsL/1NTU/5KSkvhLS0t3AAAAPAAAADUAAAAuAAAAKAAA
        ACEAAAAaAAAAEwAAAA0AAAAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGd3d3Xnt7
        e50mJiYiAAAAIQAAACcAAAAtAAAAMwAAADmCgoLw0tLS/7Ozs//Gxsb/paWl/WRkZJkAAAA8AAAANwAA
        ADEAAAAqAAAAJEFBQTdiYmJOAAAAEQAAAAoAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAICA
        gHSGhob5lZWV/ISEhOdZWVlNAAAAIxoaGjFjY2N+fHx8xoCAgP/g4OD/t7e3/8LCwv+5ubn/gICA/V5e
        XnobGxs5AAAAKwAAACZnZ2dmg4OD9oCAgP93d3d0AAAACgAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACEhIRbhYWF+uXl5f/z8/P/y8vL/4aGhvh+fn7NgoKC8ZmZmfe+vr7/4ODg/9/f3/+8vLz/v7+//+Hh
        4f+3t7f/kZGR9oGBgfNubm6Aenp6rImJifjOzs7/19fX/4WFhfd7e3tVAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAIODg6aSkpL89fX1/+Pj4//p6en/5ubm/7a2tv7Y2Nj/6+vr/97e3v/S0tL/xsbG/8LC
        wv++vr7/wcHB/8zMzP/a2tr/ysrK/42Njfqbm5v72NjY/8PDw//U1NT/wsLC/4CAgP8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAgICABoeHh9jDw8P+7u7u/+Tk5P/l5eX/7u7u/+Xl5f/Z2dn/1NTU/9DQ
        0P/MzMz/x8fH/8PDw/+/v7//u7u7/7i4uP/FxcX/39/f/9PT0/+2trb/tbW1/9nZ2f+RkZH4gYGBbwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgICAJIWFhfbg4OD/6urq/+Xl5f/j4+P/4eHh/93d
        3f/Z2dn/1dXV/9HR0f/Nzc3/ycnJ/8XFxf/BwcH/vb29/7m5uf+1tbX/sLCw/7CwsP/Ly8v/r6+v/YWF
        hcj///8BAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgYGBsqCgoP319fX/5+fn/+Xl
        5f/j4+P/4uLi/9/f3//b29v/19fX/9PT0//Ozs7/ysrK/8bGxv/CwsL/vr6+/7q6uv+2trb/vr6+/8nJ
        yf+AgID/hISEHQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIuLiwuFhYXw4eHh//Dw
        8P/p6en/6Ojo/+bm5v/k5OT/4+Pj/+np6f/t7e3/7e3t/+np6f/e3t7/zs7O/8jIyP/ExMT/v7+//7u7
        u//Hx8f/0NDQ/4GBgfmAgIAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgICAYqOj
        o/b39/f/7u7u/+zs7P/q6ur/6Ojo/+np6f/09PT/xsbG/pmZmfKLi4vzl5eX8sHBwf7r6+v/0tLS/8nJ
        yf/FxcX/wcHB/76+vv/f39//kpKS9oGBgVsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAICA
        gAqEhITQzs7O//X19f/w8PD/7u7u/+zs7P/s7Oz/9fX1/6ampvaGhobQgYGBS4CAgCaBgYFLhISE0KKi
        ovbs7Oz/0dHR/8vLy//Gxsb/wsLC/9HR0f+4uLj/hISEtAAAAAAAAAAAAAAAAAAAAAAAAAAAgoKCbImJ
        ibqHh4fpgoKC/IyMjPv09PT/9fX1//Pz8//x8fH/7+/v//Pz8//Nzc3+hoaGzZmZmQUAAAAAAAAAAAAA
        AACZmZkFhYWFzcTExP7h4eH/0NDQ/8zMzP/IyMj/y8vL/9ra2v+AgID/hYWFx4ODg5aAgIBogICANAAA
        AACAgID/yMjI/+Pj4//z8/P/9fX1//b29v/29vb/9fX1//Pz8//x8fH/+Pj4/5CQkPKCgoIzAAAAAAAA
        AAAAAAAAAAAAAAAAAACCgoIzjo6O8u7u7v/W1tb/0dHR/83Nzf/Jycn/5eXl/9vb2//Hx8f/s7Oz/6Gh
        ofmAgID/AAAAAICAgP/x8fH/5eXl/+Xl5f/p6en/7e3t//Hx8f/19fX/9vb2//T09P/6+vr/goKC/ICA
        gAYAAAAAAAAAAAAAAAAAAAAAAAAAAICAgAaCgoL88/Pz/9vb2//X19f/09PT/8/Pz//Ly8v/ycnJ/8rK
        yv/S0tL/4uLi/4GBgf4AAAAAgYGB/Ofn5//s7Oz/6enp/+np6f/q6ur/7Ozs/+/v7//z8/P/9vb2//r6
        +v+JiYn0gICAHgAAAAAAAAAAAAAAAAAAAAAAAAAAgICAHoiIiPTz8/P/4eHh/93d3f/Y2Nj/1NTU/9DQ
        0P/Nzc3/z8/P/9bW1v/d3d3/goKC8wAAAACCgoLkgYGB/o2NjfagoKD3uLi4/fHx8f/o6Oj/6urq/+7u
        7v/y8vL/+vr6/7m5ufiGhoaWAAAAAAAAAAAAAAAAAAAAAAAAAACGhoaWtLS0+PDw8P/j4+P/4eHh/97e
        3v/b29v/7e3t/+Tk5P/Ozs7/tra2/paWlvqBgYH0AAAAAAAAAACSkpIHgoKCLYCAgFSAgID9ysrK/+np
        6f/l5eX/6enp/+3t7f/y8vL/9/f3/4+Pj/SGhoaWgICACgAAAACAgIAKhoaGlo6OjvTy8vL/6enp/+Xl
        5f/k5OT/4uLi/+fn5//Pz8//gICA/4aGhs2EhISVgICAYISEhB0AAAAAAAAAAAAAAAAAAAAAAAAAAICA
        gGKfn5/37e3t/+Dg4P/k5OT/6Ojo/+vr6//z8/P/8fHx/6qqqveDg4P3hoaG6oODg/eoqKj37+/v//Dw
        8P/q6ur/6Ojo/+bm5v/k5OT/8fHx/56envaAgIBeAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAgICADoODg/Lb29v/4uLi/97e3v/i4uL/5ubm/+rq6v/x8fH/+Pj4//j4+P/r6+v/9vb2//j4
        +P/y8vL/7u7u/+zs7P/q6ur/6Ojo/+3t7f/f39//hISE8YCAgAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAgoKCsaCgoP3o6Oj/2dnZ/93d3f/h4eH/5eXl/+np6f/t7e3/8PDw//X1
        9f/29vb/9PT0//Ly8v/w8PD/7+/v/+3t7f/r6+v/9vb2/5SUlPuCgoKZAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAIWFhRmEhIT01NTU/9bW1v/U1NT/2NjY/9zc3P/g4OD/5OTk/+fn
        5//r6+v/7+/v//Pz8//29vb/9fX1//Pz8//x8fH/7+/v/+3t7f/y8vL/zs7O/4aGhueAgIAMAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///8BhISExbOzs/za2tr/y8vL/9HR0f/i4uL/3d3d/9ra
        2v/e3t7/4uLi/+bm5v/q6ur/7u7u//Ly8v/19fX/9fX1//X19f/09PT/8PDw/+7u7v/09PT/rKys+oeH
        h6wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIKCgmyKior75+fn/8nJyf/Pz8//5OTk/8TE
        xP/e3t7/6Ojo/+Li4v/f39//4eHh/+Xl5f/p6en/7e3t//Pz8//5+fn/6+vr/+Pj4//39/f/8PDw//Dw
        8P/z8/P/iIiI+4KCgnAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgICAboODg/zd3d3/5OTk/9vb
        2/+SkpL3gYGB8oODg/Sjo6P5zc3N/+3t7f/h4eH/4ODg/+jo6P/x8fH/09PT/6mpqfiDg4P3gICA/7i4
        uPz29vb/9vb2/+zs7P+CgoL9goKCWgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgoKCdomJ
        ifaysrL/hISE94KCgnL///8BhoaGE4CAgHSAgID9tLS0/eDg4P/a2tr/6Ojo/6urq/uBgYHzgYGBb4CA
        gA6AgIAUiYmJt5KSkvjR0dH/jY2N9oODg3kAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAgYGBX4KCguWCgoIxAAAAAAAAAAAAAAAAAAAAAICAgE6ampr24eHh/9XV1f/o6Oj/lZWV9YCA
        gDwAAAAAAAAAAAAAAAAAAAAAgYGBXYCAgP+CgoJiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAhISEH4eHh/jl5eX/1NTU/+vr
        6/+EhIT6hoaGEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAg4OD+OHh
        4f/q6ur/4eHh/4WFhfQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACBgYHpgICA/4ODg/eAgID/g4ODzgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///////8P///+D////g///34H//48B8/8AAAH+AAAA/wAAAf+AAAH/gA
        AD/4AAA/+AAAP/ADgB+AB8AHAA/gAQAP4AEAD+ABAAfAAfADgAf4AAA/+AAAP/gAAD/4AAA/8AAAH/AA
        AB/wAAAf+PAcP/34P3//+D////g////4P/8=
</value>
  </data>
</root>